use strum_macros::Display;
use strum_macros::EnumIter;

#[derive(Debug, Display, Clone, Copy, EnumIter)]
pub enum DIAGONAL {
    A8A8 = 1,
    A7B8 = 2,
    A6C8 = 3,
    A5D8 = 4,
    A4E8 = 5,
    A3F8 = 6,
    A2G8 = 7,
    A1H8 = 8,
    B1H7 = 9,
    C1H6 = 10,
    D1H5 = 11,
    E1H4 = 12,
    F1H3 = 13,
    G1H2 = 14,
    H1H1 = 15,
}

impl DIAGONAL {
    pub fn bits(&self) -> u64 {
        match self {
            Self::A8A8 => 0b0000000100000000000000000000000000000000000000000000000000000000,
            Self::A7B8 => 0b0000001000000001000000000000000000000000000000000000000000000000,
            Self::A6C8 => 0b0000010000000010000000010000000000000000000000000000000000000000,
            Self::A5D8 => 0b0000100000000100000000100000000100000000000000000000000000000000,
            Self::A4E8 => 0b0001000000001000000001000000001000000001000000000000000000000000,
            Self::A3F8 => 0b0010000000010000000010000000010000000010000000010000000000000000,
            Self::A2G8 => 0b0100000000100000000100000000100000000100000000100000000100000000,
            Self::A1H8 => 0b1000000001000000001000000001000000001000000001000000001000000001,
            Self::B1H7 => 0b0000000010000000010000000010000000010000000010000000010000000010,
            Self::C1H6 => 0b0000000000000000100000000100000000100000000100000000100000000100,
            Self::D1H5 => 0b0000000000000000000000001000000001000000001000000001000000001000,
            Self::E1H4 => 0b0000000000000000000000000000000010000000010000000010000000010000,
            Self::F1H3 => 0b0000000000000000000000000000000000000000100000000100000000100000,
            Self::G1H2 => 0b0000000000000000000000000000000000000000000000001000000001000000,
            Self::H1H1 => 0b0000000000000000000000000000000000000000000000000000000010000000,
        }
    }
}
